# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build app

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "*.md"
      - "*.txt"
      - .editorconfig
      - ".github/**"
      - .gitignore
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: "6.0.x"
      - run: dotnet test /p:CollectCoverage=true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./tests/TestResults/coverage.cobertura.xml
          fail_ci_if_error: true
          name: simpleserver
          verbose: true
  deploy:
    name: Publish application
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') && success()
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: "6.0.x"
      - run: |
          echo "Github ref is: $GITHUB_REF"
          if [[ "$GITHUB_REF" =~ ^refs\/tags\/([[:digit:]]\.[[:digit:]]\.[[:digit:]](\-[[:alpha:]])?)$ ]]; then
            echo "Version is: ${BASH_REMATCH[1]}"
            echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
          else
            >&2 echo "Not running for a tag. Is this a problem with Github Actions?"
            exit 1
          fi
        name: Prepare version number
      - run: dotnet publish simpleserver -r linux-x64 --self-contained -p:Version=$VERSION
        name: Publish for Linux x64
      - run: dotnet publish simpleserver -r linux-musl-x64 --self-contained -p:Version=$VERSION
        name: Publish for Linux Musl
      - run: dotnet publish simpleserver -r linux-arm --self-contained -p:Version=$VERSION
        name: Publish for Linux Arm
      - run: dotnet publish simpleserver -r win-x64 --self-contained -p:Version=$VERSION
        name: Publish for Windows
      - run: dotnet publish simpleserver -p:UseAppHost=false -c Release -p:Version=$VERSION
        name: Publish Framework dependent
      - run: dotnet pack simpleserver -p:Version=$VERSION
        name: Pack dotnet tool
      - name: Copy published files to publish location
        run: |
          mkdir publish
          cp simpleserver/bin/Release/net6.0/linux-x64/publish/simpleserver publish/simpleserver-linux-x64
          cp simpleserver/bin/Release/net6.0/linux-x64/publish/simpleserver.pdb publish/simpleserver-linux-x64.pdb
          cp simpleserver/bin/Release/net6.0/linux-musl-x64/publish/simpleserver publish/simpleserver-linux-musl-x64
          cp simpleserver/bin/Release/net6.0/linux-musl-x64/publish/simpleserver.pdb publish/simpleserver-linux-musl-x64.pdb
          cp simpleserver/bin/Release/net6.0/linux-arm/publish/simpleserver publish/simpleserver-linux-arm
          cp simpleserver/bin/Release/net6.0/linux-arm/publish/simpleserver.pdb publish/simpleserver-linux-arm.pdb
          cp simpleserver/bin/Release/net6.0/win-x64/publish/simpleserver.exe publish/
          cp simpleserver/bin/Release/net6.0/win-x64/publish/simpleserver.pdb publish/
          find simpleserver/bin/Release/net6.0/publish/ -printf "%P\n" | tar -cvzf publish/simpleserver.tgz --no-recursion -C simpleserver/bin/Release/net6.0/publish/ -T -
      - name: Publish package to nuget.org
        run: dotnet nuget push simpleserver/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: publish/*
